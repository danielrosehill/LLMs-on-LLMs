import os

# Define the path to the directory containing markdown files
path = '/home/daniel/Git/llms-on-llms/docs/'

# Define the text to replace and the new text
old_text = '''\nThe above text was generated by a large language model (LLM) and its accuracy has not been validated. This page is part of 'LLMs-on-LLMs,' a Github repository by Daniel Rosehill which explores how curious humans can use LLMs to better their understanding of LLMs and AI. However, the information should not be regarded as authoritative and given the fast pace of evolution in LLM technology will eventually become deprecated. \n\nThis footer was added at 15-11-2024.\n''' 

new_text = """
*The above text was generated by a large language model (LLM) and its accuracy has not been validated. This page is part of 'LLMs-on-LLMs,' a Github repository by Daniel Rosehill which explores how curious humans can use LLMs to better their understanding of LLMs and AI. However, the information should not be regarded as authoritative and given the fast pace of evolution in LLM technology will eventually become deprecated. This footer was added at 15-11-2024.*
"""

# Traverse the directory and replace text in markdown files
for subdir, dirs, files in os.walk(path):
    for filename in files:
        if filename.endswith('.md'):
            file_path = os.path.join(subdir, filename)
            # Open the file and read its content
            with open(file_path, 'r') as file:
                content = file.read()
            # Replace old text with new text
            new_content = content.replace(old_text, new_text)
            # Write the new content back to the file only if there was a change
            if content != new_content:
                with open(file_path, 'w') as file:
                    file.write(new_content)
                print(f"Updated: {file_path}")