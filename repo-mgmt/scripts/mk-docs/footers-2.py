import os

# Define the footer text to search for and add if missing
footer_text = """---
*The above text was generated by a large language model (LLM) and its accuracy has not been validated. This page is part of 'LLMs-on-LLMs,' a Github repository by Daniel Rosehill which explores how curious humans can use LLMs to better their understanding of LLMs and AI. However, the information should not be regarded as authoritative and given the fast pace of evolution in LLM technology will eventually become deprecated. This footer was added at 15-11-2024.*
---"""

# Define the directory to search in
docs_dir = "/home/daniel/Git/llms-on-llms/docs"

def process_markdown_file(file_path):
    """Process a single markdown file: check for the footer, fix formatting, or add if missing."""
    with open(file_path, 'r') as f:
        content = f.read()

    # Check if the footer exists in the file
    if footer_text in content:
        print(f"Footer already present and correctly formatted in: {file_path}")
        return

    # Search for an incorrectly formatted version of the footer
    if "The above text was generated by a large language model (LLM)" in content:
        # Remove any extra spaces around the lines of the existing footer
        print(f"Fixing footer formatting in: {file_path}")
        content = content.replace("The above text was generated by a large language model (LLM)", footer_text)
    else:
        # Add the footer if it's missing
        print(f"Adding missing footer to: {file_path}")
        content += "\n\n" + footer_text

    # Write the updated content back to the file
    with open(file_path, 'w') as f:
        f.write(content)

def process_all_markdown_files(directory):
    """Recursively process all markdown files in a directory."""
    for root, _, files in os.walk(directory):
        for file in files:
            if file.endswith(".md"):
                file_path = os.path.join(root, file)
                process_markdown_file(file_path)

if __name__ == "__main__":
    process_all_markdown_files(docs_dir)